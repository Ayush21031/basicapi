# name: Build and Push Docker image

# on:
#   push:
#     branches:
#       - master  # Trigger the workflow on push to the main branch (change if your default branch is different)

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Log in to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and push Docker image
#       uses: docker/build-push-action@v4
#       with:
#         context: .
#         push: true
#         tags: ayush21031/basicapi:latest


name: Build, Push Docker Image, and Deploy to GCP VM

on:
  push:
    branches:
      - master  # Trigger the workflow on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ayush21031/basicapi:latest

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure docker to use gcloud command-line tool as a credential helper
      run: gcloud auth configure-docker

    - name: Connect to GCP VM and update Docker container
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_VM_INSTANCE: ${{ secrets.GCP_VM_INSTANCE }}
        GCP_ZONE: ${{ secrets.GCP_ZONE }}
      run: |
        # Get the external IP of the VM instance
        GCP_VM_IP=$(gcloud compute instances describe $GCP_VM_INSTANCE --zone $GCP_ZONE --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
        
        # SSH into the VM and run the commands to update the Docker container
        gcloud compute ssh $GCP_VM_INSTANCE --zone $GCP_ZONE --command "
          docker pull ayush21031/basicapi:latest &&
          docker stop basicapi-container || true &&
          docker rm basicapi-container || true &&
          docker run -d --name basicapi-container -p 80:80 ayush21031/basicapi:latest
        "
